---
- hosts: localhost
  connection: local

  tasks:
    - name: Install dependencies
      import_tasks: tasks/install-dependencies.yml

    - name: Gather git information
      import_tasks: tasks/git-info.yml

    - set_fact:
        k8s_vars:
          production:
            namespace: video-downloader-back-end
            hostname: spa-renderer.video.home.ruchij.com
            replica_count: 2
          development:
            namespace: video-downloader-back-end-{{ git_branch }}
            hostname: spa-renderer.{{ git_branch }}.video.dev.ruchij.com
            replica_count: 1

    - set_fact:
        namespace: "{{ k8s_vars[env].namespace }}"
        hostname: "{{ k8s_vars[env].hostname }}"
        ghcr_credentials: "{{ lookup('aws_ssm', '/github/ghcr/docker-config', region='ap-southeast-2') }}"
        replica_count: "{{ k8s_vars[env].replica_count }}"

    - name: Render K8s resource files
      block:
        - name: Create output directory
          file:
            path: output/k8s
            state: directory

        - name: Render files
          template:
            src: "{{ item }}"
            dest: output/k8s/{{ item | basename }}
          with_fileglob:
            - k8s/*.yaml

    - name: Set kube_config
      import_tasks: tasks/k8s-config.yml

    - name: Deploy K8s resources
      block:
        - name: Create Namespace
          command: kubectl apply -f output/k8s/Namespace.yaml --kubeconfig {{ kubeconfig }}

        - name: Create Docker registry secret
          command: kubectl apply -f output/k8s/DockerRegistryCredentials.yaml --kubeconfig {{ kubeconfig }}

        - name: Deploy application
          command: kubectl apply -f output/k8s --kubeconfig {{ kubeconfig }}

        - name: Wait for successful deployment
          command: kubectl rollout status deployment spa-renderer-deployment --kubeconfig {{ kubeconfig }} -n {{ namespace }}

    - name: Clean up output directories
      block:
        - name: Clean up K8s resource files
          file:
            path: output/k8s
            state: absent

        - name: Clean up kubeconfig file
          file:
            path: "{{ kubeconfig }}"
            state: absent